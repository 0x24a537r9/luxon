class LuxonError extends Error{}class InvalidDateTimeError extends LuxonError{constructor(e){super(`Invalid DateTime: ${e}`)}}class InvalidIntervalError extends LuxonError{constructor(e){super(`Invalid Interval: ${e}`)}}class InvalidDurationError extends LuxonError{constructor(e){super(`Invalid Duration: ${e}`)}}class ConflictingSpecificationError extends LuxonError{}class InvalidUnitError extends LuxonError{constructor(e){super(`Invalid unit ${e}`)}}class InvalidArgumentError extends LuxonError{}class ZoneIsAbstractError extends LuxonError{constructor(){super('Zone is an abstract class')}}class Zone{get type(){throw new ZoneIsAbstractError}get name(){throw new ZoneIsAbstractError}get universal(){throw new ZoneIsAbstractError}static offsetName(){throw new ZoneIsAbstractError}offset(){throw new ZoneIsAbstractError}equals(){throw new ZoneIsAbstractError}get isValid(){throw new ZoneIsAbstractError}}let singleton=null;class LocalZone extends Zone{static get instance(){return null==singleton&&(singleton=new LocalZone),singleton}get type(){return'local'}get name(){return Util.hasIntl()?new Intl.DateTimeFormat().resolvedOptions().timeZone:'local'}get universal(){return!1}offsetName(e,{format:n,locale:a}){return Util.parseZoneInfo(e,n,a)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return'local'===e.type}get isValid(){return!0}}const typeToPos={year:0,month:1,day:2,hour:3,minute:4,second:5};function hackyOffset(e,n){const a=e.format(n),i=/(\d+)\/(\d+)\/(\d+), (\d+):(\d+):(\d+)/.exec(a),[,o,t,s,r,d,m]=i;return[s,o,t,r,d,m]}function partsOffset(e,n){const a=e.formatToParts(n),o=[];for(let t=0;t<a.length;t++){const{type:e,value:n}=a[t],i=typeToPos[e];Util.isUndefined(i)||(o[i]=parseInt(n,10))}return o}function isValid(e){try{return new Intl.DateTimeFormat('en-US',{timeZone:e}).format(),!0}catch(n){return!1}}class IANAZone extends Zone{static isValidSpecier(e){return e&&e.match(/[a-z_]+\/[a-z_]+/i)}constructor(e){super(),this.zoneName=e,this.valid=isValid(e)}get type(){return'iana'}get name(){return this.zoneName}get universal(){return!1}offsetName(e,{format:n,locale:a}){return Util.parseZoneInfo(e,n,a,this.zoneName)}offset(e){const n=new Date(e),a=new Intl.DateTimeFormat('en-US',{hour12:!1,timeZone:this.zoneName,year:'numeric',month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit',second:'2-digit'}),[i,o,t,s,r,d]=a.formatToParts?partsOffset(a,n):hackyOffset(a,n),m=Date.UTC(i,o-1,t,s,r,d);let l=n.valueOf();return l-=l%1e3,(m-l)/60000}equals(e){return'iana'===e.type&&e.zoneName===this.zoneName}get isValid(){return this.valid}}let singleton$1=null;function hoursMinutesOffset(e){var n=Math.abs;const a=Math.trunc(e.fixed/60),i=n(e.fixed%60),o=0<a?'+':'-',t=o+n(a);return 0<i?`${t}:${Util.pad(i,2)}`:t}class FixedOffsetZone extends Zone{static get utcInstance(){return null==singleton$1&&(singleton$1=new FixedOffsetZone(0)),singleton$1}static instance(e){return 0===e?FixedOffsetZone.utcInstance:new FixedOffsetZone(e)}static parseSpecifier(e){if(e){const n=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(n)return new FixedOffsetZone(Util.signedOffset(n[1],n[2]))}return null}constructor(e){super(),this.fixed=e}get type(){return'fixed'}get name(){return 0===this.fixed?'UTC':`UTC${hoursMinutesOffset(this)}`}offsetName(){return this.name}get universal(){return!0}offset(){return this.fixed}equals(e){return'fixed'===e.type&&e.fixed===this.fixed}get isValid(){return!0}}class Formats{}Formats.DATE_SHORT={year:'numeric',month:'numeric',day:'numeric'},Formats.DATE_MED={year:'numeric',month:'short',day:'numeric'},Formats.DATE_FULL={year:'numeric',month:'long',day:'numeric'},Formats.DATE_HUGE={year:'numeric',month:'long',day:'numeric',weekday:'long'},Formats.TIME_SIMPLE={hour:'numeric',minute:'2-digit'},Formats.TIME_WITH_SECONDS={hour:'numeric',minute:'2-digit',second:'2-digit'},Formats.TIME_WITH_SHORT_OFFSET={hour:'numeric',minute:'2-digit',second:'2-digit',timeZoneName:'short'},Formats.TIME_WITH_LONG_OFFSET={hour:'numeric',minute:'2-digit',second:'2-digit',timeZoneName:'long'},Formats.TIME_24_SIMPLE={hour:'numeric',minute:'2-digit',hour12:!1},Formats.TIME_24_WITH_SECONDS={hour:'numeric',minute:'2-digit',second:'2-digit',hour12:!1},Formats.TIME_24_WITH_SHORT_OFFSET={hour:'numeric',minute:'2-digit',second:'2-digit',hour12:!1,timeZoneName:'short'},Formats.TIME_24_WITH_LONG_OFFSET={hour:'numeric',minute:'2-digit',second:'2-digit',hour12:!1,timeZoneName:'long'},Formats.DATETIME_SHORT={year:'numeric',month:'numeric',day:'numeric',hour:'numeric',minute:'2-digit'},Formats.DATETIME_SHORT_WITH_SECONDS={year:'numeric',month:'numeric',day:'numeric',hour:'numeric',minute:'2-digit',second:'2-digit'},Formats.DATETIME_MED={year:'numeric',month:'short',day:'numeric',hour:'numeric',minute:'2-digit'},Formats.DATETIME_MED_WITH_SECONDS={year:'numeric',month:'short',day:'numeric',hour:'numeric',minute:'2-digit',second:'2-digit'},Formats.DATETIME_FULL={year:'numeric',month:'long',day:'numeric',hour:'numeric',minute:'2-digit',timeZoneName:'short'},Formats.DATETIME_FULL_WITH_SECONDS={year:'numeric',month:'long',day:'numeric',hour:'numeric',minute:'2-digit',second:'2-digit',timeZoneName:'short'},Formats.DATETIME_HUGE={year:'numeric',month:'long',day:'numeric',weekday:'long',hour:'numeric',minute:'2-digit',timeZoneName:'long'},Formats.DATETIME_HUGE_WITH_SECONDS={year:'numeric',month:'long',day:'numeric',weekday:'long',hour:'numeric',minute:'2-digit',second:'2-digit',timeZoneName:'long'};function stringify(e){return JSON.stringify(e,Object.keys(e).sort())}class English{static get monthsLong(){return['January','February','March','April','May','June','July','August','September','October','November','December']}static get monthsShort(){return['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']}static get monthsNarrow(){return['J','F','M','A','M','J','J','A','S','O','N','D']}static months(e){return'narrow'===e?English.monthsNarrow:'short'===e?English.monthsShort:'long'===e?English.monthsLong:'numeric'===e?['1','2','3','4','5','6','7','8','9','10','11','12']:'2-digit'===e?['01','02','03','04','05','06','07','08','09','10','11','12']:null}static get weekdaysLong(){return['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']}static get weekdaysShort(){return['Mon','Tue','Wed','Thu','Fri','Sat','Sun']}static get weekdaysNarrow(){return['M','T','W','T','F','S','S']}static weekdays(e){return'narrow'===e?English.weekdaysNarrow:'short'===e?English.weekdaysShort:'long'===e?English.weekdaysLong:'numeric'===e?['1','2','3','4','5','6','7']:null}static get meridiems(){return['AM','PM']}static get erasLong(){return['Before Christ','Anno Domini']}static get erasShort(){return['BC','AD']}static get erasNarrow(){return['B','A']}static eras(e){return'narrow'===e?English.erasNarrow:'short'===e?English.erasShort:'long'===e?English.erasLong:null}static meridiemForDateTime(e){return English.meridiems[12>e.hour?0:1]}static weekdayForDateTime(e,n){return English.weekdays(n)[e.weekday-1]}static monthForDateTime(e,n){return English.months(n)[e.month-1]}static eraForDateTime(e,n){return English.eras(n)[0>e.year?0:1]}static formatString(e){const n=Util.pick(e,['weekday','era','year','month','day','hour','minute','second','timeZoneName','hour12']),a=stringify(n),i='EEEE, LLLL d, yyyy, h:mm a';return a===stringify(Formats.DATE_SHORT)?'M/d/yyyy':a===stringify(Formats.DATE_MED)?'LLL d, yyyy':a===stringify(Formats.DATE_FULL)?'LLLL d, yyyy':a===stringify(Formats.DATE_HUGE)?'EEEE, LLLL d, yyyy':a===stringify(Formats.TIME_SIMPLE)?'h:mm a':a===stringify(Formats.TIME_WITH_SECONDS)?'h:mm:ss a':a===stringify(Formats.TIME_WITH_SHORT_OFFSET)?'h:mm a':a===stringify(Formats.TIME_WITH_LONG_OFFSET)?'h:mm a':a===stringify(Formats.TIME_24_SIMPLE)?'HH:mm':a===stringify(Formats.TIME_24_WITH_SECONDS)?'HH:mm:ss':a===stringify(Formats.TIME_24_WITH_SHORT_OFFSET)?'HH:mm':a===stringify(Formats.TIME_24_WITH_LONG_OFFSET)?'HH:mm':a===stringify(Formats.DATETIME_SHORT)?'M/d/yyyy, h:mm a':a===stringify(Formats.DATETIME_MED)?'LLL d, yyyy, h:mm a':a===stringify(Formats.DATETIME_FULL)?'LLLL d, yyyy, h:mm a':a===stringify(Formats.DATETIME_HUGE)?i:a===stringify(Formats.DATETIME_SHORT_WITH_SECONDS)?'M/d/yyyy, h:mm:ss a':a===stringify(Formats.DATETIME_MED_WITH_SECONDS)?'LLL d, yyyy, h:mm:ss a':a===stringify(Formats.DATETIME_FULL_WITH_SECONDS)?'LLLL d, yyyy, h:mm:ss a':a===stringify(Formats.DATETIME_HUGE_WITH_SECONDS)?'EEEE, LLLL d, yyyy, h:mm:ss a':i}}function stringifyTokens(e,n){let a='';for(const i of e)a+=i.literal?i.val:n(i.val);return a}class Formatter{static create(e,n={}){const a=Object.assign({},{round:!0},n);return new Formatter(e,a)}static parseFormat(e){let n=null,a='',o=!1;const t=[];for(let s=0;s<e.length;s++){const i=e.charAt(s);'\''===i?(0<a.length&&t.push({literal:o,val:a}),n=null,a='',o=!o):o?a+=i:i===n?a+=i:(0<a.length&&t.push({literal:!1,val:a}),a=i,n=i)}return 0<a.length&&t.push({literal:o,val:a}),t}constructor(e,n){this.opts=n,this.loc=e}formatDateTime(e,n={}){const a=this.loc.dtFormatter(e,Object.assign({},this.opts,n));return a.format()}formatDateTimeParts(e,n={}){const a=this.loc.dtFormatter(e,Object.assign({},this.opts,n));return a.formatToParts()}resolvedOptions(e,n={}){const a=this.loc.dtFormatter(e,Object.assign({},this.opts,n));return a.resolvedOptions()}num(e,n=0){const a=Object.assign({},this.opts);return 0<n&&(a.padTo=n),this.loc.numberFormatter(a).format(e)}formatDateTimeFromString(e,n){var a=Math.abs;const i='en'===this.loc.listingMode(),o=(n,a)=>this.loc.extract(e,n,a),t=(n)=>{if(e.isOffsetFixed&&0===e.offset&&n.allowZ)return'Z';const i=Util.towardZero(e.offset/60),o=a(e.offset%60),t=0<=i?'+':'-',s=`${t}${a(i)}`;switch(n.format){case'short':return`${t}${this.num(a(i),2)}:${this.num(o,2)}`;case'narrow':return 0<o?`${s}:${o}`:s;case'techie':return`${t}${this.num(a(i),2)}${this.num(o,2)}`;default:throw new RangeError(`Value format ${n.format} is out of range for property format`);}},s=()=>i?English.meridiemForDateTime(e):o({hour:'numeric',hour12:!0},'dayperiod'),r=(n,a)=>i?English.monthForDateTime(e,n):o(a?{month:n}:{month:n,day:'numeric'},'month'),d=(n,a)=>i?English.weekdayForDateTime(e,n):o(a?{weekday:n}:{weekday:n,month:'long',day:'numeric'},'weekday'),m=(n)=>i?English.eraForDateTime(e,n):o({era:n},'era');return stringifyTokens(Formatter.parseFormat(n),(n)=>{const a=this.loc.outputCalendar;return'S'===n?this.num(e.millisecond):'SSS'===n?this.num(e.millisecond,3):'s'===n?this.num(e.second):'ss'===n?this.num(e.second,2):'m'===n?this.num(e.minute):'mm'===n?this.num(e.minute,2):'h'===n?this.num(12===e.hour?12:e.hour%12):'hh'===n?this.num(12===e.hour?12:e.hour%12,2):'H'===n?this.num(e.hour):'HH'===n?this.num(e.hour,2):'Z'===n?t({format:'narrow',allowZ:!0}):'ZZ'===n?t({format:'short',allowZ:!0}):'ZZZ'===n?t({format:'techie',allowZ:!1}):'ZZZZ'===n?e.offsetNameShort:'ZZZZZ'===n?e.offsetNameLong:'z'===n?e.zoneName:'a'===n?s():'d'===n?a?o({day:'numeric'},'day'):this.num(e.day):'dd'===n?a?o({day:'2-digit'},'day'):this.num(e.day,2):'c'===n?this.num(e.weekday):'ccc'===n?d('short',!0):'cccc'===n?d('long',!0):'ccccc'===n?d('narrow',!0):'E'===n?this.num(e.weekday):'EEE'===n?d('short',!1):'EEEE'===n?d('long',!1):'EEEEE'===n?d('narrow',!1):'L'===n?a?o({month:'numeric',day:'numeric'},'month'):this.num(e.month):'LL'===n?a?o({month:'2-digit',day:'numeric'},'month'):this.num(e.month,2):'LLL'===n?r('short',!0):'LLLL'===n?r('long',!0):'LLLLL'===n?r('narrow',!0):'M'===n?a?o({month:'numeric'},'month'):this.num(e.month):'MM'===n?a?o({month:'2-digit'},'month'):this.num(e.month,2):'MMM'===n?r('short',!1):'MMMM'===n?r('long',!1):'MMMMM'===n?r('narrow',!1):'y'===n?a?o({year:'numeric'},'year'):this.num(e.year):'yy'===n?a?o({year:'2-digit'},'year'):this.num(e.year.toString().slice(-2),2):'yyyy'===n?a?o({year:'numeric'},'year'):this.num(e.year,4):'G'===n?m('short'):'GG'===n?m('long'):'GGGGG'===n?m('narrow'):'kk'===n?this.num(e.weekYear.toString().slice(-2),2):'kkkk'===n?this.num(e.weekYear,4):'W'===n?this.num(e.weekNumber):'WW'===n?this.num(e.weekNumber,2):'o'===n?this.num(e.ordinal):'ooo'===n?this.num(e.ordinal,3):'D'===n?this.formatDateTime(e,DateTime.DATE_SHORT):'DD'===n?this.formatDateTime(e,DateTime.DATE_MED):'DDD'===n?this.formatDateTime(e,DateTime.DATE_FULL):'DDDD'===n?this.formatDateTime(e,DateTime.DATE_HUGE):'t'===n?this.formatDateTime(e,DateTime.TIME_SIMPLE):'tt'===n?this.formatDateTime(e,DateTime.TIME_WITH_SECONDS):'ttt'===n?this.formatDateTime(e,DateTime.TIME_WITH_SHORT_OFFSET):'tttt'===n?this.formatDateTime(e,DateTime.TIME_WITH_LONG_OFFSET):'T'===n?this.formatDateTime(e,DateTime.TIME_24_SIMPLE):'TT'===n?this.formatDateTime(e,DateTime.TIME_24_WITH_SECONDS):'TTT'===n?this.formatDateTime(e,DateTime.TIME_24_WITH_SHORT_OFFSET):'TTTT'===n?this.formatDateTime(e,DateTime.TIME_24_WITH_LONG_OFFSET):'f'===n?this.formatDateTime(e,DateTime.DATETIME_SHORT):'ff'===n?this.formatDateTime(e,DateTime.DATETIME_MED):'fff'===n?this.formatDateTime(e,DateTime.DATETIME_FULL):'ffff'===n?this.formatDateTime(e,DateTime.DATETIME_HUGE):'F'===n?this.formatDateTime(e,DateTime.DATETIME_SHORT_WITH_SECONDS):'FF'===n?this.formatDateTime(e,DateTime.DATETIME_MED_WITH_SECONDS):'FFF'===n?this.formatDateTime(e,DateTime.DATETIME_FULL_WITH_SECONDS):'FFFF'===n?this.formatDateTime(e,DateTime.DATETIME_HUGE_WITH_SECONDS):n})}formatDurationFromString(e,n){const a=(e)=>{switch(e[0]){case'S':return'millisecond';case's':return'second';case'm':return'minute';case'h':return'hour';case'd':return'day';case'M':return'month';case'y':return'year';default:return null;}},i=Formatter.parseFormat(n),o=i.reduce((e,{literal:n,val:a})=>n?e:e.concat(a),[]),t=e.shiftTo(...o.map(a).filter((e)=>e));return stringifyTokens(i,((e)=>(n)=>{const i=a(n);return i?this.num(e.get(i),n.length):n})(t))}}let localeCache={},sysLocaleCache=null;function systemLocale(){return sysLocaleCache?sysLocaleCache:Util.hasIntl()?(sysLocaleCache=new Intl.DateTimeFormat().resolvedOptions().locale,sysLocaleCache):(sysLocaleCache='en-US',sysLocaleCache)}function intlConfigString(e,n,a){return Util.hasIntl()?(e=Array.isArray(e)?e:[e],(a||n)&&(e=e.map((e)=>{return e+='-u',a&&(e+='-ca-'+a),n&&(e+='-nu-'+n),e})),e):[]}function mapMonths(e){const n=[];for(let a=1;12>=a;a++){const i=DateTime.utc(2016,a,1);n.push(e(i))}return n}function mapWeekdays(e){const n=[];for(let a=1;7>=a;a++){const i=DateTime.utc(2016,11,13+a);n.push(e(i))}return n}function listStuff(e,n,a,i,o){const t=e.listingMode(a);return'error'===t?null:'en'===t?i(n):o(n)}class PolyNumberFormatter{constructor(e){this.padTo=e.padTo||0,this.round=e.round||!1}format(e){const n=this.round?Math.round(e):e;return n.toString().padStart(this.padTo,'0')}}class PolyDateFormatter{constructor(e,n,a){this.opts=a,this.hasIntl=Util.hasIntl();let i;if(e.zone.universal?(this.dt=0===e.offset?e:DateTime.fromMillis(e.ts+1e3*(60*e.offset)),i='UTC'):'local'===e.zone.type?this.dt=e:(this.dt=e,i=e.zone.name),this.hasIntl){const e=Object.assign({},this.opts);i&&(e.timeZone=i),this.dtf=new Intl.DateTimeFormat(n,e)}}format(){if(this.hasIntl)return this.dtf.format(this.dt.toJSDate());const e=English.formatString(this.opts),n=Locale.create('en-US');return Formatter.create(n).formatDateTimeFromString(this.dt,e)}formatToParts(){return this.hasIntl&&Util.hasFormatToParts()?this.dtf.formatToParts(this.dt.toJSDate()):[]}resolvedOptions(){return this.hasIntl?this.dtf.resolvedOptions():{locale:'en-US',numberingSystem:'latn',outputCalendar:'gregory'}}}class Locale{static fromOpts(e){return Locale.create(e.locale,e.numberingSystem,e.outputCalendar,e.defaultToEN)}static create(e,n,a,i=!1){const o=e||Settings.defaultLocale,t=o||(i?'en-US':systemLocale()),s=n||Settings.defaultNumberingSystem,r=a||Settings.defaultOutputCalendar,d=`${t}|${s}|${r}|${o}`,m=localeCache[d];if(m)return m;const l=new Locale(t,s,r,o);return localeCache[d]=l,l}static resetCache(){sysLocaleCache=null,localeCache={}}static fromObject({locale:e,numberingSystem:n,outputCalendar:a}={}){return Locale.create(e,n,a)}constructor(e,n,a,i){Object.defineProperty(this,'locale',{value:e,enumerable:!0}),Object.defineProperty(this,'numberingSystem',{value:n,enumerable:!0}),Object.defineProperty(this,'outputCalendar',{value:a,enumerable:!0}),Object.defineProperty(this,'intl',{value:intlConfigString(this.locale,this.numberingSystem,this.outputCalendar),enumerable:!1}),Object.defineProperty(this,'weekdaysCache',{value:{format:{},standalone:{}},enumerable:!1}),Object.defineProperty(this,'monthsCache',{value:{format:{},standalone:{}},enumerable:!1}),Object.defineProperty(this,'meridiemCache',{value:null,enumerable:!1,writable:!0}),Object.defineProperty(this,'eraCache',{value:{},enumerable:!1,writable:!0}),Object.defineProperty(this,'specifiedLocale',{value:i,enumerable:!0})}listingMode(e=!0){const n=Util.hasIntl(),a=n&&Util.hasFormatToParts(),i='en'===this.locale||'en-us'===this.locale.toLowerCase()||n&&Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith('en-us'),o=(null===this.numberingSystem||'latn'===this.numberingSystem)&&(null===this.outputCalendar||'gregory'===this.outputCalendar);return a||i&&o||e?!a||i&&o?'en':'intl':'error'}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?Locale.create(e.locale||this.specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,e.defaultToEN||!1):this}redefaultToEN(e={}){return this.clone(Object.assign({},e,{defaultToEN:!0}))}months(e,n=!1,a=!0){return listStuff(this,e,a,English.months,()=>{const a=n?{month:e,day:'numeric'}:{month:e},i=n?'format':'standalone';return this.monthsCache[i][e]||(this.monthsCache[i][e]=mapMonths((e)=>this.extract(e,a,'month'))),this.monthsCache[i][e]})}weekdays(e,n=!1,a=!0){return listStuff(this,e,a,English.weekdays,()=>{const a=n?{weekday:e,year:'numeric',month:'long',day:'numeric'}:{weekday:e},i=n?'format':'standalone';return this.weekdaysCache[i][e]||(this.weekdaysCache[i][e]=mapWeekdays((e)=>this.extract(e,a,'weekday'))),this.weekdaysCache[i][e]})}meridiems(e=!0){return listStuff(this,void 0,e,()=>English.meridiems,()=>{if(!this.meridiemCache){const e={hour:'numeric',hour12:!0};this.meridiemCache=[DateTime.utc(2016,11,13,9),DateTime.utc(2016,11,13,19)].map((n)=>this.extract(n,e,'dayperiod'))}return this.meridiemCache})}eras(e,n=!0){return listStuff(this,e,n,English.eras,()=>{const n={era:e};return this.eraCache[e]||(this.eraCache[e]=[DateTime.utc(-40,1,1),DateTime.utc(2017,1,1)].map((e)=>this.extract(e,n,'era'))),this.eraCache[e]})}extract(e,n,a){const i=this.dtFormatter(e,n),o=i.formatToParts(),t=o.find((e)=>e.type.toLowerCase()===a);return t?t.value:null}numberFormatter(e={},n={}){if(Util.hasIntl()){const a=Object.assign({useGrouping:!1},n);return 0<e.padTo&&(a.minimumIntegerDigits=e.padTo),e.round&&(a.maximumFractionDigits=0),new Intl.NumberFormat(this.intl,a)}return new PolyNumberFormatter(e)}dtFormatter(e,n={}){return new PolyDateFormatter(e,this.intl,n)}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}}let now=()=>new Date().valueOf(),defaultZone=null,defaultLocale=null,defaultNumberingSystem=null,defaultOutputCalendar=null,throwOnInvalid=!1;class Settings{static get now(){return now}static set now(e){now=e}static get defaultZoneName(){return(defaultZone||LocalZone.instance).name}static set defaultZoneName(e){defaultZone=Util.normalizeZone(e)}static get defaultZone(){return defaultZone||LocalZone.instance}static get defaultLocale(){return defaultLocale}static set defaultLocale(e){defaultLocale=e}static get defaultNumberingSystem(){return defaultNumberingSystem}static set defaultNumberingSystem(e){defaultNumberingSystem=e}static get defaultOutputCalendar(){return defaultOutputCalendar}static set defaultOutputCalendar(e){defaultOutputCalendar=e}static get throwOnInvalid(){return throwOnInvalid}static set throwOnInvalid(e){throwOnInvalid=e}static resetCaches(){Locale.resetCache()}}class Util{static friendlyDuration(e){if(Util.isNumber(e))return Duration.fromMillis(e);if(e instanceof Duration)return e;if(e instanceof Object)return Duration.fromObject(e);throw new InvalidArgumentError('Unknown duration argument')}static friendlyDateTime(e){if(e instanceof DateTime)return e;if(e.valueOf&&Util.isNumber(e.valueOf()))return DateTime.fromJSDate(e);if(e instanceof Object)return DateTime.fromObject(e);throw new InvalidArgumentError('Unknown datetime argument')}static maybeArray(e){return Array.isArray(e)?e:[e]}static isUndefined(e){return'undefined'==typeof e}static isNumber(e){return'number'==typeof e}static isString(e){return'string'==typeof e}static isDate(e){return'[object Date]'===Object.prototype.toString.call(e)}static numberBetween(e,n,a){return Util.isNumber(e)&&e>=n&&e<=a}static pad(e,a=2){return('0'.repeat(a)+e).slice(-a)}static towardZero(e){return 0>e?Math.ceil(e):Math.floor(e)}static flatten(e){return e.reduce((e,n)=>e.concat(Array.isArray(n)?Util.flatten(n):n),[])}static bestBy(e,n,a){return e.reduce((e,i)=>{const o=[n(i),i];return e?a.apply(null,[e[0],o[0]])===e[0]?e:o:o},null)[1]}static pick(e,n){return n.reduce((n,a)=>{return n[a]=e[a],n},{})}static isLeapYear(e){return 0==e%4&&(0!=e%100||0==e%400)}static daysInYear(e){return Util.isLeapYear(e)?366:365}static daysInMonth(e,n){return 2===n?Util.isLeapYear(e)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][n-1]}static parseZoneInfo(e,n,a,i=null){const o=new Date(e),t={hour12:!1,year:'numeric',month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'};i&&(t.timeZone=i);const s=Object.assign({timeZoneName:n},t),r=Util.hasIntl();if(r&&Util.hasFormatToParts()){const e=new Intl.DateTimeFormat(a,s).formatToParts(o).find((e)=>'timezonename'===e.type.toLowerCase());return e?e.value:null}if(r){const e=new Intl.DateTimeFormat(a,t).format(o),n=new Intl.DateTimeFormat(a,s).format(o),i=n.substring(e.length),r=i.replace(/^[, ]+/,'');return r}return null}static normalizeZone(e){if(Util.isUndefined(e)||null===e)return LocalZone.instance;if(e instanceof Zone)return e;if(Util.isString(e)){const n=e.toLowerCase();return'local'===n?LocalZone.instance:'utc'===n?FixedOffsetZone.utcInstance:IANAZone.isValidSpecier(n)?new IANAZone(e):FixedOffsetZone.parseSpecifier(n)||Settings.defaultZone}return Util.isNumber(e)?FixedOffsetZone.instance(e):'object'==typeof e&&e.offset?e:Settings.defaultZone}static normalizeObject(e,n,a=!1){const i={};for(const o in e)if(e.hasOwnProperty(o)){const t=e[o];if(null!==t&&!Util.isUndefined(t)&&!Number.isNaN(t)){const e=n(o,a);e&&(i[e]=t)}}return i}static timeObject(e){return Util.pick(e,['hour','minute','second','millisecond'])}static untruncateYear(e){return 99<e?e:60<e?1900+e:2e3+e}static signedOffset(e,n){const a=parseInt(e,10)||0,i=parseInt(n,10)||0,o=0>a?-i:i;return 60*a+o}static hasIntl(){return'undefined'!=typeof Intl&&Intl.DateTimeFormat}static hasFormatToParts(){return!Util.isUndefined(Intl.DateTimeFormat.prototype.formatToParts)}}function combineRegexes(...e){const n=e.reduce((e,n)=>e+n.source,'');return RegExp(n)}function combineExtractors(...e){return(n)=>e.reduce(([e,a,i],o)=>{const[t,s,r]=o(n,i);return[Object.assign(e,t),a||s,r]},[{},null,1]).slice(0,2)}function parse(e,...n){if(null==e)return[null,null];for(const[a,i]of n){const n=a.exec(e);if(n)return i(n)}return[null,null]}function simpleParse(...e){return(n,a)=>{const o={};let t;for(t=0;t<e.length;t++)o[e[t]]=parseInt(n[a+t]);return[o,null,a+t]}}const isoTimeRegex=/(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d\d\d))?)?)?(?:(Z)|([+-]\d\d)(?::?(\d\d))?)?)?$/,isoYmdRegex=/^([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,isoWeekRegex=/^(\d{4})-?W(\d\d)-?(\d)/,isoOrdinalRegex=/^(\d{4})-?(\d{3})/,extractISOWeekData=simpleParse('weekYear','weekNumber','weekDay'),extractISOOrdinalData=simpleParse('year','ordinal');function extractISOYmd(e,n){const a={year:parseInt(e[n]),month:parseInt(e[n+1])||1,day:parseInt(e[n+2])||1};return[a,null,n+3]}function extractISOTime(e,n){const a=!e[n+4]&&!e[n+5],i=Util.signedOffset(e[n+5],e[n+6]),o={hour:parseInt(e[n])||0,minute:parseInt(e[n+1])||0,second:parseInt(e[n+2])||0,millisecond:parseInt(e[n+3])||0},t=a?null:new FixedOffsetZone(i);return[o,t,n+7]}const isoDuration=/^P(?:(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)D)?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?)?|(\d+)W)$/;function extractISODuration(e){const[,n,a,i,o,t,s,r]=e;return{years:parseInt(n),months:parseInt(a),weeks:parseInt(r),days:parseInt(i),hours:parseInt(o),minutes:parseInt(t),seconds:parseInt(s)}}const obsOffsets={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function fromStrings(e,n,a,i,o,t,s){const r={year:2===n.length?Util.untruncateYear(parseInt(n)):parseInt(n),month:English.monthsShort.indexOf(a)+1,day:parseInt(i),hour:parseInt(o),minute:parseInt(t)};return s&&(r.second=parseInt(s)),e&&(r.weekday=3<e.length?English.weekdaysLong.indexOf(e)+1:English.weekdaysShort.indexOf(e)+1),r}const rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function extractRFC2822(e){const[,n,a,i,o,t,s,r,d,m,l,u]=e,c=fromStrings(n,o,i,a,t,s,r);let f;return f=d?obsOffsets[d]:m?0:Util.signedOffset(l,u),[c,new FixedOffsetZone(f)]}function preprocessRFC2822(e){return e.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').trim()}const rfc1123=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,rfc850=/^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,ascii=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function extractRFC1123Or850(e){const[,n,a,i,o,t,s,r]=e,d=fromStrings(n,o,i,a,t,s,r);return[d,FixedOffsetZone.utcInstance]}function extractASCII(e){const[,n,a,i,o,t,s,r]=e,d=fromStrings(n,r,a,i,o,t,s);return[d,FixedOffsetZone.utcInstance]}class RegexParser{static parseISODate(e){return parse(e,[combineRegexes(isoYmdRegex,isoTimeRegex),combineExtractors(extractISOYmd,extractISOTime)],[combineRegexes(isoWeekRegex,isoTimeRegex),combineExtractors(extractISOWeekData,extractISOTime)],[combineRegexes(isoOrdinalRegex,isoTimeRegex),combineExtractors(extractISOOrdinalData,extractISOTime)])}static parseRFC2822Date(e){return parse(preprocessRFC2822(e),[rfc2822,extractRFC2822])}static parseHTTPDate(e){return parse(e,[rfc1123,extractRFC1123Or850],[rfc850,extractRFC1123Or850],[ascii,extractASCII])}static parseISODuration(e){return parse(e,[isoDuration,extractISODuration])}}const INVALID$1='Invalid Duration',lowOrderMatrix={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:604800000},days:{hours:24,minutes:1440,seconds:86400,milliseconds:86400000},hours:{minutes:60,seconds:3600,milliseconds:3600000},minutes:{seconds:60,milliseconds:60000},seconds:{milliseconds:1e3}},casualMatrix=Object.assign({years:{months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536000,milliseconds:31536000000},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592000,milliseconds:2592000000}},lowOrderMatrix),daysInYearAccurate=146097/400,daysInMonthAccurate=146097/4800,accurateMatrix=Object.assign({years:{months:12,weeks:daysInYearAccurate/7,days:daysInYearAccurate,hours:24*daysInYearAccurate,minutes:60*(24*daysInYearAccurate),seconds:60*(60*(24*daysInYearAccurate)),milliseconds:1e3*(60*(60*(24*daysInYearAccurate)))},months:{weeks:daysInMonthAccurate/7,days:daysInMonthAccurate,hours:24*daysInYearAccurate,minutes:60*(24*daysInYearAccurate),seconds:60*(60*(24*daysInYearAccurate)),milliseconds:1e3*(60*(60*(24*daysInYearAccurate)))}},lowOrderMatrix),orderedUnits$1=['years','months','weeks','days','hours','minutes','seconds','milliseconds'];function clone$1(e,n,a=!1){const i={values:a?n.values:Object.assign(e.values,n.values||{}),loc:e.loc.clone(n.loc),conversionAccuracy:n.conversionAccuracy||e.conversionAccuracy};return new Duration(i)}function isHighOrderNegative(e){for(const n of orderedUnits$1)if(e[n])return 0>e[n];return!1}class Duration{constructor(e){const n='longterm'===e.conversionAccuracy||!1;Object.defineProperty(this,'values',{value:e.values,enumerable:!0}),Object.defineProperty(this,'loc',{value:e.loc||Locale.create(),enumerable:!0}),Object.defineProperty(this,'conversionAccuracy',{value:n?'longterm':'casual',enumerable:!0}),Object.defineProperty(this,'invalidReason',{value:e.invalidReason||null,enumerable:!1}),Object.defineProperty(this,'matrix',{value:n?accurateMatrix:casualMatrix,enumerable:!1})}static fromMillis(e,n){return Duration.fromObject(Object.assign({milliseconds:e},n))}static fromObject(e){return new Duration({values:Util.normalizeObject(e,Duration.normalizeUnit,!0),loc:Locale.fromObject(e),conversionAccuracy:e.conversionAccuracy})}static fromISO(e,n){const a=Object.assign(RegexParser.parseISODuration(e),n);return Duration.fromObject(a)}static invalid(e){if(!e)throw new InvalidArgumentError('need to specify a reason the DateTime is invalid');if(Settings.throwOnInvalid)throw new InvalidDurationError(e);else return new Duration({invalidReason:e})}static normalizeUnit(e,n=!1){const a={year:'years',years:'years',month:'months',months:'months',week:'weeks',weeks:'weeks',day:'days',days:'days',hour:'hours',hours:'hours',minute:'minutes',minutes:'minutes',second:'seconds',seconds:'seconds',millisecond:'milliseconds',milliseconds:'milliseconds'}[e?e.toLowerCase():e];if(!n&&!a)throw new InvalidUnitError(e);return a}get locale(){return this.loc.locale}get numberingSystem(){return this.loc.numberingSystem}toFormat(e,n={}){return this.isValid?Formatter.create(this.loc,n).formatDurationFromString(this,e):INVALID$1}toObject(e={}){if(!this.isValid)return{};const n=Object.assign({},this.values);return e.includeConfig&&(n.conversionAccuracy=this.conversionAccuracy,n.numberingSystem=this.loc.numberingSystem,n.locale=this.loc.locale),n}toISO(){if(!this.isValid)return null;let e='P',n=this.normalize();return n=isHighOrderNegative(n.values)?n.negate():n,0<n.years&&(e+=n.years+'Y'),0<n.months&&(e+=n.months+'M'),(0<n.days||0<n.weeks)&&(e+=n.days+7*n.weeks+'D'),(0<n.hours||0<n.minutes||0<n.seconds||0<n.milliseconds)&&(e+='T'),0<n.hours&&(e+=n.hours+'H'),0<n.minutes&&(e+=n.minutes+'M'),0<n.seconds&&(e+=n.seconds+'S'),e}toJSON(){return this.toISO()}toString(){return this.toISO()}plus(e){if(!this.isValid)return this;const n=Util.friendlyDuration(e),a={};for(const i of orderedUnits$1){const e=n.get(i)+this.get(i);0!==e&&(a[i]=e)}return clone$1(this,{values:a},!0)}minus(e){if(!this.isValid)return this;const n=Util.friendlyDuration(e);return this.plus(n.negate())}get(e){return this[Duration.normalizeUnit(e)]}set(e){const n=Object.assign(this.values,Util.normalizeObject(e,Duration.normalizeUnit));return clone$1(this,{values:n})}reconfigure({locale:e,numberingSystem:n,conversionAccuracy:a}={}){const i=this.loc.clone({locale:e,numberingSystem:n}),o={loc:i};return a&&(o.conversionAccuracy=a),clone$1(this,o)}as(e){return this.isValid?this.shiftTo(e).get(e):NaN}normalize(){if(!this.isValid)return this;const e=isHighOrderNegative(this.values),n=e?this.negate():this,a=n.shiftTo(...Object.keys(this.values));return e?a.negate():a}shiftTo(...e){if(!this.isValid)return this;if(0===e.length)return this;e=e.map((e)=>Duration.normalizeUnit(e));const n={},a={},i=this.toObject();let o;for(const t of orderedUnits$1)if(0<=e.indexOf(t)){for(const e in n[t]=0,o=t,a)a.hasOwnProperty(e)&&(n[t]+=this.matrix[e][t]*a[e]),delete a[e];for(const e in Util.isNumber(i[t])&&(n[t]+=i[t]),i)if(orderedUnits$1.indexOf(e)>orderedUnits$1.indexOf(t)){const a=this.matrix[t][e],o=Math.floor(i[e]/a);n[t]+=o,i[e]-=o*a}}else Util.isNumber(i[t])&&(a[t]=i[t]);if(o)for(const e in a)a.hasOwnProperty(e)&&(n[o]+=a[e]/this.matrix[o][e]);return clone$1(this,{values:n},!0)}negate(){if(!this.isValid)return this;const e={};for(const n of Object.keys(this.values))e[n]=-this.values[n];return clone$1(this,{values:e})}get years(){return this.isValid?this.values.years||0:NaN}get months(){return this.isValid?this.values.months||0:NaN}get weeks(){return this.isValid?this.values.weeks||0:NaN}get days(){return this.isValid?this.values.days||0:NaN}get hours(){return this.isValid?this.values.hours||0:NaN}get minutes(){return this.isValid?this.values.minutes||0:NaN}get seconds(){return this.isValid?this.values.seconds||0:NaN}get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalidReason}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this.loc.equals(e.loc))return!1;for(const n of orderedUnits$1)if(this.values[n]!==e.values[n])return!1;return!0}}const INVALID$2='Invalid Interval';function validateStartEnd(e,n){return!!e&&!!n&&e.isValid&&n.isValid&&e<=n}class Interval{constructor(e){Object.defineProperty(this,'s',{value:e.start,enumerable:!0}),Object.defineProperty(this,'e',{value:e.end,enumerable:!0}),Object.defineProperty(this,'invalidReason',{value:e.invalidReason||null,enumerable:!1})}static invalid(e){if(!e)throw new InvalidArgumentError('need to specify a reason the DateTime is invalid');if(Settings.throwOnInvalid)throw new InvalidIntervalError(e);else return new Interval({invalidReason:e})}static fromDateTimes(e,n){const a=Util.friendlyDateTime(e),i=Util.friendlyDateTime(n);return new Interval({start:a,end:i,invalidReason:validateStartEnd(a,i)?null:'invalid endpoints'})}static after(e,n){const a=Util.friendlyDuration(n),i=Util.friendlyDateTime(e);return Interval.fromDateTimes(i,i.plus(a))}static before(e,n){const a=Util.friendlyDuration(n),i=Util.friendlyDateTime(e);return Interval.fromDateTimes(i.minus(a),i)}static fromISO(n,a){if(n){const[i,o]=n.split(/\//);if(i&&o)return Interval.fromDateTimes(DateTime.fromISO(i,a),DateTime.fromISO(o,a))}return Interval.invalid('invalid ISO format')}get start(){return this.isValid?this.s:null}get end(){return this.isValid?this.e:null}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalidReason}length(e='milliseconds'){return this.isValid?this.toDuration(...[e]).get(e):NaN}count(e='milliseconds'){if(!this.isValid)return NaN;const n=this.start.startOf(e),a=this.end.startOf(e);return Math.floor(a.diff(n,e).get(e))+1}hasSame(e){return!!this.isValid&&this.e.minus(1).hasSame(this.s,e)}isEmpty(){return this.s.valueOf()===this.e.valueOf()}isAfter(e){return!!this.isValid&&this.s>e}isBefore(e){return!!this.isValid&&this.e.plus(1)<e}contains(e){return!!this.isValid&&this.s<=e&&this.e>e}set({start:e,end:n}={}){return this.isValid?Interval.fromDateTimes(e||this.s,n||this.e):this}splitAt(...e){if(!this.isValid)return[];const n=e.map(Util.friendlyDateTime).sort(),a=[];let{s:o}=this,t=0;for(;o<this.e;){const e=n[t]||this.e,i=+e>+this.e?this.e:e;a.push(Interval.fromDateTimes(o,i)),o=i,t+=1}return a}splitBy(e){if(!this.isValid)return[];const n=Util.friendlyDuration(e),a=[];let i,o,{s:t}=this;for(;t<this.e;)i=t.plus(n),o=+i>+this.e?this.e:i,a.push(Interval.fromDateTimes(t,o)),t=o;return a}divideEqually(e){return this.isValid?this.splitBy(this.length()/e).slice(0,e):[]}overlaps(e){return this.e>e.s&&this.s<e.e}abutsStart(e){return!!this.isValid&&+this.e==+e.s}abutsEnd(e){return!!this.isValid&&+e.e==+this.s}engulfs(e){return!!this.isValid&&this.s<=e.s&&this.e>=e.e}equals(e){return this.s.equals(e.s)&&this.e.equals(e.e)}intersection(n){if(!this.isValid)return this;const a=this.s>n.s?this.s:n.s,i=this.e<n.e?this.e:n.e;return a>i?null:Interval.fromDateTimes(a,i)}union(n){if(!this.isValid)return this;const a=this.s<n.s?this.s:n.s,i=this.e>n.e?this.e:n.e;return Interval.fromDateTimes(a,i)}static merge(e){const[n,a]=e.sort((e,n)=>e.s-n.s).reduce(([e,n],a)=>{return n?n.overlaps(a)||n.abutsStart(a)?[e,n.union(a)]:[e.concat([n]),a]:[e,a]},[[],null]);return a&&n.push(a),n}static xor(e){let n=null,a=0;const o=[],i=e.map((e)=>[{time:e.s,type:'s'},{time:e.e,type:'e'}]),t=Util.flatten(i).sort((e,n)=>e.time-n.time);for(const s of t)a+='s'===s.type?1:-1,1==a?n=s.time:(n&&+n!=+s.time&&o.push(Interval.fromDateTimes(n,s.time)),n=null);return Interval.merge(o)}difference(...e){return Interval.xor([this].concat(e)).map((e)=>this.intersection(e)).filter((e)=>e&&!e.isEmpty())}toString(){return this.isValid?`[${this.s.toISO()} – ${this.e.toISO()})`:INVALID$2}toISO(e){return this.isValid?`${this.s.toISO(e)}/${this.e.toISO(e)}`:INVALID$2}toFormat(e,{separator:n=' \u2013 '}={}){return this.isValid?`${this.s.toFormat(e)}${n}${this.e.toFormat(e)}`:INVALID$2}toDuration(e,n){return this.isValid?this.e.diff(this.s,e,n):Duration.invalid(this.invalidReason)}}class Info{static hasDST(e=Settings.defaultZone){const n=DateTime.local().setZone(e).set({month:12});return!e.universal&&n.offset!==n.set({month:6}).offset}static months(e='long',{locale:n=null,numberingSystem:a=null,outputCalendar:i='gregory'}={}){return Locale.create(n,a,i).months(e)}static monthsFormat(e='long',{locale:n=null,numberingSystem:a=null,outputCalendar:i='gregory'}={}){return Locale.create(n,a,i).months(e,!0)}static weekdays(e='long',{locale:n=null,numberingSystem:a=null}={}){return Locale.create(n,a,null).weekdays(e)}static weekdaysFormat(e='long',{locale:n=null,numberingSystem:a=null}={}){return Locale.create(n,a,null).weekdays(e,!0)}static meridiems({locale:e=null}={}){return Locale.create(e).meridiems()}static eras(e='short',{locale:n=null}={}){return Locale.create(n,null,'gregory').eras(e)}static features(){let e=!1,n=!1,a=!1;if(Util.hasIntl()){e=!0,n=Util.hasFormatToParts();try{a='America/New_York'===new Intl.DateTimeFormat('en',{timeZone:'America/New_York'}).resolvedOptions().timeZone}catch(n){a=!1}}return{intl:e,intlTokens:n,zones:a}}}const MISSING_FTP='missing Intl.DateTimeFormat.formatToParts support';function intUnit(e,n=(e)=>e){return{regex:e,deser:([e])=>n(parseInt(e))}}function fixListRegex(e){return e.replace(/\./,'\\.?')}function stripInsensitivities(e){return e.replace(/\./,'').toLowerCase()}function oneOf(e,n){return null===e?null:{regex:RegExp(e.map(fixListRegex).join('|')),deser:([a])=>e.findIndex((e)=>stripInsensitivities(a)===stripInsensitivities(e))+n}}function offset(e,n){return{regex:e,deser:([,e,n])=>Util.signedOffset(e,n),groups:n}}function simple(e){return{regex:e,deser:([e])=>e}}function unitForToken(e,n){const a=/\d/,i=/\d\d/,o=/\d{3}/,s=/\d{4}/,r=/\d\d?/,d=/\d(?:\d{2})?/,m=/\d\d(?:\d{2})?/,l=(e)=>({regex:RegExp(e.val),deser:([e])=>e,literal:!0}),t=((u)=>{if(e.literal)return l(u);switch(u.val){case'G':return oneOf(n.eras('short',!1),0);case'GG':return oneOf(n.eras('long',!1),0);case'yyyy':return intUnit(s);case'yy':return intUnit(m,Util.untruncateYear);case'M':return intUnit(r);case'MM':return intUnit(i);case'MMM':return oneOf(n.months('short',!1,!1),1);case'MMMM':return oneOf(n.months('long',!1,!1),1);case'L':return intUnit(r);case'LL':return intUnit(i);case'LLL':return oneOf(n.months('short',!0,!1),1);case'LLLL':return oneOf(n.months('long',!0,!1),1);case'd':return intUnit(r);case'dd':return intUnit(i);case'o':return intUnit(d);case'ooo':return intUnit(o);case'HH':return intUnit(i);case'H':return intUnit(r);case'hh':return intUnit(i);case'h':return intUnit(r);case'mm':return intUnit(i);case'm':return intUnit(r);case's':return intUnit(r);case'ss':return intUnit(i);case'S':return intUnit(d);case'SSS':return intUnit(o);case'a':return oneOf(n.meridiems(),0);case'kkkk':return intUnit(s);case'kk':return intUnit(m,Util.untruncateYear);case'W':return intUnit(r);case'WW':return intUnit(i);case'E':case'c':return intUnit(a);case'EEE':return oneOf(n.weekdays('short',!1,!1),1);case'EEEE':return oneOf(n.weekdays('long',!1,!1),1);case'ccc':return oneOf(n.weekdays('short',!0,!1),1);case'cccc':return oneOf(n.weekdays('long',!0,!1),1);case'Z':case'ZZ':return offset(/([+-]\d{1,2})(?::(\d{2}))?/,2);case'ZZZ':return offset(/([+-]\d{1,2})(\d{2})?/,2);case'z':return simple(/[A-Za-z_]+\/[A-Za-z_]+/);default:return l(u);}})(e)||{invalidReason:MISSING_FTP};return t.token=e,t}function buildRegex(e){return[e.map((e)=>e.regex).reduce((e,n)=>`${e}(${n.source})`,''),e]}function match(e,n,a){const o=e.match(n);if(o){const e={};let n=1;for(const t in a)if(a.hasOwnProperty(t)){const i=a[t],s=i.groups?i.groups+1:1;!i.literal&&i.token&&(e[i.token.val[0]]=i.deser(o.slice(n,n+s))),n+=s}return[o,e]}return[o,{}]}function dateTimeFromMatches(e){const n=(e)=>{return'S'===e?'millisecond':'s'===e?'second':'m'===e?'minute':'h'===e||'H'===e?'hour':'d'===e?'day':'o'===e?'ordinal':'L'===e||'M'===e?'month':'y'===e?'year':'E'===e||'c'===e?'weekday':'W'===e?'weekNumber':'k'===e?'weekYear':null};let a;a=Util.isUndefined(e.Z)?Util.isUndefined(e.z)?null:new IANAZone(e.z):new FixedOffsetZone(e.Z),Util.isUndefined(e.h)||1!==e.a||(e.h+=12),0===e.G&&e.y&&(e.y=-e.y);const i=Object.keys(e).reduce((a,i)=>{const o=n(i);return o&&(a[o]=e[i]),a},{});return[i,a]}class TokenParser{constructor(e){Object.defineProperty(this,'loc',{value:e,enumerable:!0})}explainParse(e,n){const a=Formatter.parseFormat(n),i=a.map((e)=>unitForToken(e,this.loc)),o=i.find((e)=>e.invalidReason);if(o)return{input:e,tokens:a,invalidReason:o.invalidReason};const[t,s]=buildRegex(i),r=RegExp(t,'i'),[d,m]=match(e,r,s),[l,u]=m?dateTimeFromMatches(m):[null,null];return{input:e,tokens:a,regex:r,rawMatches:d,matches:m,result:l,zone:u}}parseDateTime(e,n){const{result:a,zone:i,invalidReason:o}=this.explainParse(e,n);return[a,i,o]}}const nonLeapLadder=[0,31,59,90,120,151,181,212,243,273,304,334],leapLadder=[0,31,60,91,121,152,182,213,244,274,305,335];function dayOfWeek(e,n,a){const i=new Date(Date.UTC(e,n-1,a)).getUTCDay();return 0===i?7:i}function lastWeekNumber(e){var n=Math.floor;const a=(e+n(e/4)-n(e/100)+n(e/400))%7,i=e-1,o=(i+n(i/4)-n(i/100)+n(i/400))%7;return 4==a||3==o?53:52}function computeOrdinal(e,n,a){return a+(Util.isLeapYear(e)?leapLadder:nonLeapLadder)[n-1]}function uncomputeOrdinal(e,n){const a=Util.isLeapYear(e)?leapLadder:nonLeapLadder,i=a.findIndex((e)=>e<n),o=n-a[i];return{month:i+1,day:o}}class Conversions{static gregorianToWeek(e){const{year:n,month:a,day:i}=e,o=computeOrdinal(n,a,i),t=dayOfWeek(n,a,i);let s,r=Math.floor((o-t+10)/7);return 1>r?(s=n-1,r=lastWeekNumber(s)):r>lastWeekNumber(n)?(s=n+1,r=1):s=n,Object.assign({weekYear:s,weekNumber:r,weekday:t},Util.timeObject(e))}static weekToGregorian(e){const{weekYear:n,weekNumber:a,weekday:i}=e,o=dayOfWeek(n,1,4),t=Util.daysInYear(n);let s,r=7*a+i-o-3;1>r?(s=n-1,r+=Util.daysInYear(s)):r>t?(s=n+1,r-=Util.daysInYear(s)):s=n;const{month:d,day:m}=uncomputeOrdinal(s,r);return Object.assign({year:s,month:d,day:m},Util.timeObject(e))}static gregorianToOrdinal(e){const{year:n,month:a,day:i}=e,o=computeOrdinal(n,a,i);return Object.assign({year:n,ordinal:o},Util.timeObject(e))}static ordinalToGregorian(e){const{year:n,ordinal:a}=e,{month:i,day:o}=uncomputeOrdinal(n,a);return Object.assign({year:n,month:i,day:o},Util.timeObject(e))}static hasInvalidWeekData(e){const n=Util.isNumber(e.weekYear),a=Util.numberBetween(e.weekNumber,1,lastWeekNumber(e.weekYear)),i=Util.numberBetween(e.weekday,1,7);return n?a?!i&&'weekday out of range':'week out of range':'weekYear out of range'}static hasInvalidOrdinalData(e){const n=Util.isNumber(e.year),a=Util.numberBetween(e.ordinal,1,Util.daysInYear(e.year));return n?!a&&'ordinal out of range':'year out of range'}static hasInvalidGregorianData(e){const n=Util.isNumber(e.year),a=Util.numberBetween(e.month,1,12),i=Util.numberBetween(e.day,1,Util.daysInMonth(e.year,e.month));return n?a?!i&&'day out of range':'month out of range':'year out of range'}static hasInvalidTimeData(e){const n=Util.numberBetween(e.hour,0,23),a=Util.numberBetween(e.minute,0,59),i=Util.numberBetween(e.second,0,59),o=Util.numberBetween(e.millisecond,0,999);return n?a?i?!o&&'millisecond out of range':'second out of range':'minute out of range':'hour out of range'}}const INVALID='Invalid DateTime',INVALID_INPUT='invalid input',UNSUPPORTED_ZONE='unsupported zone',UNPARSABLE='unparsable';function possiblyCachedWeekData(e){return null===e.weekData&&(e.weekData=Conversions.gregorianToWeek(e.c)),e.weekData}function clone(e,n){const a={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalidReason:e.invalidReason};return new DateTime(Object.assign({},a,n,{old:a}))}function fixOffset(e,n,a){let i=e-1e3*(60*n);const o=a.offset(i);if(n===o)return[i,n];i-=1e3*(60*(o-n));const t=a.offset(i);return o===t?[i,o]:[e-1e3*(60*Math.min(o,t)),Math.max(o,t)]}function tsToObj(e,n){e+=1e3*(60*n);const a=new Date(e);return{year:a.getUTCFullYear(),month:a.getUTCMonth()+1,day:a.getUTCDate(),hour:a.getUTCHours(),minute:a.getUTCMinutes(),second:a.getUTCSeconds(),millisecond:a.getUTCMilliseconds()}}function objToLocalTS(e){let n=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return 100>e.year&&0<=e.year&&(n=new Date(n),n.setFullYear(e.year)),+n}function objToTS(e,n,a){return fixOffset(objToLocalTS(e),n,a)}function adjustTime(e,n){const a=e.o,i=Object.assign({},e.c,{year:e.c.year+n.years,month:e.c.month+n.months,day:e.c.day+n.days+7*n.weeks}),t=Duration.fromObject({hours:n.hours,minutes:n.minutes,seconds:n.seconds,milliseconds:n.milliseconds}).as('milliseconds'),s=objToLocalTS(i);let[r,d]=fixOffset(s,a,e.zone);return 0!==t&&(r+=t,d=e.zone.offset(r)),{ts:r,o:d}}function parseDataToDateTime(e,n,a){const{setZone:i,zone:o}=a;if(e&&0!==Object.keys(e).length){const t=DateTime.fromObject(Object.assign(e,a,{zone:n||o}));return i?t:t.setZone(o)}return DateTime.invalid(UNPARSABLE)}function techFormat(e,n){return e.isValid?Formatter.create(Locale.create('en-US')).formatDateTimeFromString(e,n):null}const defaultUnitValues={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},defaultWeekUnitValues={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},defaultOrdinalUnitValues={ordinal:1,hour:0,minute:0,second:0,millisecond:0};function isoTimeFormat(e,n,a){return n&&0===e.second&&0===e.millisecond?'HH:mmZ':a&&0===e.millisecond?'HH:mm:ssZZ':'HH:mm:ss.SSSZZ'}const orderedUnits=['year','month','day','hour','minute','second','millisecond'],orderedWeekUnits=['weekYear','weekNumber','weekday','hour','minute','second','millisecond'],orderedOrdinalUnits=['year','ordinal','hour','minute','second','millisecond'];function normalizeUnit(e,n=!1){const a={year:'year',years:'year',month:'month',months:'month',day:'day',days:'day',hour:'hour',hours:'hour',minute:'minute',minutes:'minute',second:'second',seconds:'second',millisecond:'millisecond',milliseconds:'millisecond',weekday:'weekday',weekdays:'weekday',weeknumber:'weekNumber',weeksnumber:'weekNumber',weeknumbers:'weekNumber',weekyear:'weekYear',weekyears:'weekYear',ordinal:'ordinal'}[e?e.toLowerCase():e];if(!n&&!a)throw new InvalidUnitError(e);return a}class DateTime{constructor(e){const n=e.zone||Settings.defaultZone,a=e.invalidReason||(Number.isNaN(e.ts)?INVALID_INPUT:null)||(n.isValid?null:UNSUPPORTED_ZONE);if(Object.defineProperty(this,'ts',{value:e.ts||Settings.now(),enumerable:!0}),Object.defineProperty(this,'zone',{value:n,enumerable:!0}),Object.defineProperty(this,'loc',{value:e.loc||Locale.create(),enumerable:!0}),Object.defineProperty(this,'invalidReason',{value:a,enumerable:!1}),Object.defineProperty(this,'weekData',{writable:!0,value:null,enumerable:!1}),!a){const n=e.old&&e.old.ts===this.ts&&e.old.zone.equals(this.zone),a=n?e.old.c:tsToObj(this.ts,this.zone.offset(this.ts)),i=n?e.old.o:this.zone.offset(this.ts);Object.defineProperty(this,'c',{value:a}),Object.defineProperty(this,'o',{value:i})}}static local(e,n,a,i,o,t,s){return Util.isUndefined(e)?new DateTime({ts:Settings.now()}):DateTime.fromObject({year:e,month:n,day:a,hour:i,minute:o,second:t,millisecond:s,zone:Settings.defaultZone})}static utc(e,n,a,i,o,t,s){return Util.isUndefined(e)?new DateTime({ts:Settings.now(),zone:FixedOffsetZone.utcInstance}):DateTime.fromObject({year:e,month:n,day:a,hour:i,minute:o,second:t,millisecond:s,zone:FixedOffsetZone.utcInstance})}static fromJSDate(e,n={}){return new DateTime({ts:Util.isDate(e)?e.valueOf():NaN,zone:Util.normalizeZone(n.zone),loc:Locale.fromObject(n)})}static fromMillis(e,n={}){return new DateTime({ts:e,zone:Util.normalizeZone(n.zone),loc:Locale.fromObject(n)})}static fromObject(e){const n=Util.normalizeZone(e.zone);if(!n.isValid)return DateTime.invalid(UNSUPPORTED_ZONE);const a=Settings.now(),i=n.offset(a),o=Util.normalizeObject(e,normalizeUnit,!0),t=!Util.isUndefined(o.ordinal),s=!Util.isUndefined(o.year),r=!Util.isUndefined(o.month)||!Util.isUndefined(o.day),d=s||r,m=o.weekYear||o.weekNumber,l=Locale.fromObject(e);if((d||t)&&m)throw new ConflictingSpecificationError('Can\'t mix weekYear/weekNumber units with year/month/day or ordinals');if(r&&t)throw new ConflictingSpecificationError('Can\'t mix ordinal dates with month/day');const u=m||o.weekday&&!d;let c,f,y=tsToObj(a,i);u?(c=orderedWeekUnits,f=defaultWeekUnitValues,y=Conversions.gregorianToWeek(y)):t?(c=orderedOrdinalUnits,f=defaultOrdinalUnitValues,y=Conversions.gregorianToOrdinal(y)):(c=orderedUnits,f=defaultUnitValues);let h=!1;for(const n of c){const e=o[n];Util.isUndefined(e)?h?o[n]=f[n]:o[n]=y[n]:h=!0}const T=u?Conversions.hasInvalidWeekData(o):t?Conversions.hasInvalidOrdinalData(o):Conversions.hasInvalidGregorianData(o),g=T||Conversions.hasInvalidTimeData(o);if(g)return DateTime.invalid(g);const E=u?Conversions.weekToGregorian(o):t?Conversions.ordinalToGregorian(o):o,[S,D]=objToTS(E,i,n),p=new DateTime({ts:S,zone:n,o:D,loc:l});return o.weekday&&d&&e.weekday!==p.weekday?DateTime.invalid('mismatched weekday'):p}static fromISO(e,n={}){const[a,i]=RegexParser.parseISODate(e);return parseDataToDateTime(a,i,n)}static fromRFC2822(e,n={}){const[a,i]=RegexParser.parseRFC2822Date(e);return parseDataToDateTime(a,i,n)}static fromHTTP(e,n={}){const[a,i]=RegexParser.parseHTTPDate(e);return parseDataToDateTime(a,i,n)}static fromString(e,n,a={}){const{locale:i=null,numberingSystem:o=null}=a,t=new TokenParser(Locale.fromOpts({locale:i,numberingSystem:o,defaultToEN:!0})),[s,r,d]=t.parseDateTime(e,n);return d?DateTime.invalid(d):parseDataToDateTime(s,r,a)}static invalid(e){if(!e)throw new InvalidArgumentError('need to specify a reason the DateTime is invalid');if(Settings.throwOnInvalid)throw new InvalidDateTimeError(e);else return new DateTime({invalidReason:e})}get(e){return this[e]}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalidReason}get locale(){return this.loc.locale}get numberingSystem(){return this.loc.numberingSystem}get outputCalendar(){return this.loc.outputCalendar}get zoneName(){return this.zone.name}get year(){return this.isValid?this.c.year:NaN}get month(){return this.isValid?this.c.month:NaN}get day(){return this.isValid?this.c.day:NaN}get hour(){return this.isValid?this.c.hour:NaN}get minute(){return this.isValid?this.c.minute:NaN}get second(){return this.isValid?this.c.second:NaN}get millisecond(){return this.isValid?this.c.millisecond:NaN}get weekYear(){return this.isValid?possiblyCachedWeekData(this).weekYear:NaN}get weekNumber(){return this.isValid?possiblyCachedWeekData(this).weekNumber:NaN}get weekday(){return this.isValid?possiblyCachedWeekData(this).weekday:NaN}get ordinal(){return this.isValid?Conversions.gregorianToOrdinal(this.c).ordinal:NaN}get monthShort(){return this.isValid?Info.months('short',{locale:this.locale})[this.month-1]:null}get monthLong(){return this.isValid?Info.months('long',{locale:this.locale})[this.month-1]:null}get weekdayShort(){return this.isValid?Info.weekdays('short',{locale:this.locale})[this.weekday-1]:null}get weekdayLong(){return this.isValid?Info.weekdays('long',{locale:this.locale})[this.weekday-1]:null}get offset(){return this.isValid?this.zone.offset(this.ts):NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this.ts,{format:'short',locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this.ts,{format:'long',locale:this.locale}):null}get isOffsetFixed(){return this.zone.universal}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1}).offset||this.offset>this.set({month:5}).offset)}get isInLeapYear(){return Util.isLeapYear(this.year)}get daysInMonth(){return Util.daysInMonth(this.year,this.month)}get daysInYear(){return this.isValid?Util.daysInYear(this.year):NaN}resolvedLocaleOpts(e={}){const{locale:n,numberingSystem:a,calendar:i}=Formatter.create(this.loc.clone(e),e).resolvedOptions(this);return{locale:n,numberingSystem:a,outputCalendar:i}}toUTC(e=0,n={}){return this.setZone(FixedOffsetZone.instance(e),n)}toLocal(){return this.setZone(new LocalZone)}setZone(e,{keepCalendarTime:n=!1}={}){if(e=Util.normalizeZone(e),e.equals(this.zone))return this;if(!e.isValid)return DateTime.invalid(UNSUPPORTED_ZONE);const a=n?this.ts+1e3*(60*(this.o-e.offset(this.ts))):this.ts;return clone(this,{ts:a,zone:e})}reconfigure({locale:e,numberingSystem:n,outputCalendar:a}={}){const i=this.loc.clone({locale:e,numberingSystem:n,outputCalendar:a});return clone(this,{loc:i})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;const n=Util.normalizeObject(e,normalizeUnit),a=!Util.isUndefined(n.weekYear)||!Util.isUndefined(n.weekNumber)||!Util.isUndefined(n.weekday);let i;a?i=Conversions.weekToGregorian(Object.assign(Conversions.gregorianToWeek(this.c),n)):Util.isUndefined(n.ordinal)?(i=Object.assign(this.toObject(),n),Util.isUndefined(n.day)&&(i.day=Math.min(Util.daysInMonth(i.year,i.month),i.day))):i=Conversions.ordinalToGregorian(Object.assign(Conversions.gregorianToOrdinal(this.c),n));const[t,s]=objToTS(i,this.o,this.zone);return clone(this,{ts:t,o:s})}plus(e){if(!this.isValid)return this;const n=Util.friendlyDuration(e);return clone(this,adjustTime(this,n))}minus(e){if(!this.isValid)return this;const n=Util.friendlyDuration(e).negate();return clone(this,adjustTime(this,n))}startOf(e){if(!this.isValid)return this;const n={},a=Duration.normalizeUnit(e);switch(a){case'years':n.month=1;case'months':n.day=1;case'weeks':case'days':n.hour=0;case'hours':n.minute=0;case'minutes':n.second=0;case'seconds':n.millisecond=0;break;case'milliseconds':break;default:throw new InvalidUnitError(e);}return'weeks'===a&&(n.weekday=1),this.set(n)}endOf(e){return this.isValid?this.startOf(e).plus({[e]:1}).minus(1):this}toFormat(e,n={}){return this.isValid?Formatter.create(this.loc.redefaultToEN(),n).formatDateTimeFromString(this,e):INVALID}toLocaleString(e=Formats.DATE_SHORT){return this.isValid?Formatter.create(this.loc.clone(e),e).formatDateTime(this):INVALID}toLocaleParts(e={}){return this.isValid?Formatter.create(this.loc.clone(e),e).formatDateTimeParts(this):[]}toISO({suppressMilliseconds:e=!1,suppressSeconds:n=!1}={}){const a=`yyyy-MM-dd'T'${isoTimeFormat(this,n,e)}`;return techFormat(this,a)}toISODate(){return techFormat(this,'yyyy-MM-dd')}toISOWeekDate(){return techFormat(this,'kkkk-\'W\'WW-c')}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:n=!1}={}){return techFormat(this,isoTimeFormat(this,n,e))}toRFC2822(){return techFormat(this,'EEE, dd LLL yyyy hh:mm:ss ZZZ')}toHTTP(){return techFormat(this.toUTC(),'EEE, dd LLL yyyy hh:mm:ss \'GMT\'')}toString(){return this.isValid?this.toISO():INVALID}valueOf(){return this.isValid?this.ts:NaN}toJSON(){return this.toISO()}toObject(e={}){if(!this.isValid)return{};const n=Object.assign({},this.c);return e.includeConfig&&(n.outputCalendar=this.outputCalendar,n.numberingSystem=this.loc.numberingSystem,n.locale=this.loc.locale),n}toJSDate(){return new Date(this.isValid?this.ts:NaN)}diff(e,n='milliseconds',a={}){if(!this.isValid||!e.isValid)return Duration.invalid(this.invalidReason||e.invalidReason);const i=Util.maybeArray(n).map(Duration.normalizeUnit),o=e.valueOf()>this.valueOf(),t=o?e:this,s={};let r=o?this:e,d=null;if(0<=i.indexOf('years')){let e=t.year-r.year;r=r.set({year:t.year}),r>t&&(r=r.minus({years:1}),e-=1),s.years=e,d='years'}if(0<=i.indexOf('months')){const e=t.year-r.year;let n=t.month-r.month+12*e;r=r.set({year:t.year,month:t.month}),r>t&&(r=r.minus({months:1}),n-=1),s.months=n,d='months'}const m=()=>{const e=(e)=>e.toUTC(0,{keepCalendarTime:!0}).startOf('day').valueOf(),n=e(t)-e(r);return Math.floor(Duration.fromMillis(n,a).shiftTo('days').days)};if(0<=i.indexOf('weeks')){const e=m();let n=(e-e%7)/7;r=r.plus({weeks:n}),r>t&&(r.minus({weeks:1}),n-=1),s.weeks=n,d='weeks'}if(0<=i.indexOf('days')){let e=m();r=r.set({year:t.year,month:t.month,day:t.day}),r>t&&(r.minus({days:1}),e-=1),s.days=e,d='days'}const l=Duration.fromMillis(t-r,a),u=i.filter((e)=>0<=['hours','minutes','seconds','milliseconds'].indexOf(e)),c=0<u.length?u:[d],f=l.shiftTo(...c),y=f.plus(Duration.fromObject(Object.assign(s,a)));return o?y.negate():y}diffNow(e='milliseconds',n={}){return this.diff(DateTime.local(),e,n)}until(e){return this.isValid?Interval.fromDateTimes(this,e):this}hasSame(e,n){if(!this.isValid)return!1;if('millisecond'===n)return this.valueOf()===e.valueOf();const a=e.valueOf();return this.startOf(n)<=a&&a<=this.endOf(n)}equals(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)}static min(...e){return Util.bestBy(e,(e)=>e.valueOf(),Math.min)}static max(...e){return Util.bestBy(e,(e)=>e.valueOf(),Math.max)}static fromStringExplain(e,n,a={}){const i=new TokenParser(Locale.fromOpts(a));return i.explainParse(e,n)}static get DATE_SHORT(){return Formats.DATE_SHORT}static get DATE_MED(){return Formats.DATE_MED}static get DATE_FULL(){return Formats.DATE_FULL}static get DATE_HUGE(){return Formats.DATE_HUGE}static get TIME_SIMPLE(){return Formats.TIME_SIMPLE}static get TIME_WITH_SECONDS(){return Formats.TIME_WITH_SECONDS}static get TIME_WITH_SHORT_OFFSET(){return Formats.TIME_WITH_SHORT_OFFSET}static get TIME_WITH_LONG_OFFSET(){return Formats.TIME_WITH_LONG_OFFSET}static get TIME_24_SIMPLE(){return Formats.TIME_24_SIMPLE}static get TIME_24_WITH_SECONDS(){return Formats.TIME_24_WITH_SECONDS}static get TIME_24_WITH_SHORT_OFFSET(){return Formats.TIME_24_WITH_SHORT_OFFSET}static get TIME_24_WITH_LONG_OFFSET(){return Formats.TIME_24_WITH_LONG_OFFSET}static get DATETIME_SHORT(){return Formats.DATETIME_SHORT}static get DATETIME_SHORT_WITH_SECONDS(){return Formats.DATETIME_SHORT_WITH_SECONDS}static get DATETIME_MED(){return Formats.DATETIME_MED}static get DATETIME_MED_WITH_SECONDS(){return Formats.DATETIME_MED_WITH_SECONDS}static get DATETIME_FULL(){return Formats.DATETIME_FULL}static get DATETIME_FULL_WITH_SECONDS(){return Formats.DATETIME_FULL_WITH_SECONDS}static get DATETIME_HUGE(){return Formats.DATETIME_HUGE}static get DATETIME_HUGE_WITH_SECONDS(){return Formats.DATETIME_HUGE_WITH_SECONDS}}export{DateTime,Duration,Interval,Info,Zone,Settings};
//# sourceMappingURL=luxon.min.js.map
